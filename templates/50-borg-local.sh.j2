#!/bin/sh                                                                                                                                                                                                          
# borg backupninja backup script
REPOSITORY={{ local_borg_dir }}
export BORG_PASSPHRASE='{{ lookup('passwordstore', client + '/' + hostname + '/borg/local create=true length=32') }}'

info "Starting borg backup"

# Run the backup.
OUTPUT=$( (
borg create --warning --filter=AME --stats  --list --compression lz4         \
$REPOSITORY::'{hostname}-{now:%Y-%m-%d}' \
/etc \
/var \
/root \
/home \
/opt \
/srv \
/usr/local/bin \
/usr/local/sbin \
/var/lib/dpkg/status \
/var/lib/dpkg/status-old \
--exclude '*/templates_c' \
--exclude '*/tmp/' \
--exclude '*/temp/' \
--exclude '/home/*/.steam/steam/steamapps/common/' \
--exclude '/home/*/.cache' \
--exclude '/root/.cache' \
--exclude '/home/*/.mozilla/firefox/*/Cache' \
--exclude '/var/backups/borg' \
--exclude '/opt/borg' \
--exclude '/var/cache' \
--exclude '/var/lib' \
--exclude '/home/*/.composer/cache' \
--exclude '/home/*/.config/Code/*/bmewburn.vscode-intelephense-client' \
--exclude '/home/*/.config/google-chrome' \
--exclude '/home/*/.config/Nextcloud/logs' \
--exclude '*/site/default/files/css/' \
--exclude '*/site/default/files/js/'
) 2>&1)
if [ $? -ne 0 ] 
  then
  warning $OUTPUT
fi
info $OUTPUT

# Remove old backups.
OUTPUT=$( (
borg prune -v $REPOSITORY --glob-archives '{hostname}-*' --keep-daily=15 --keep-weekly=9 --keep-monthly=6
) 2>&1)
if [ $? -ne 0 ] 
  then
  warning $OUTPUT
fi
info $OUTPUT

DOW=$(date +'%A')
  if [[ $DOW == 'Sunday' ]]
  then
  # Check the integrity of the backup.
  OUTPUT=$( (
  borg check $REPOSITORY
  ) 2>&1)
  if [ $? -ne 0 ] 
    then
    warning $OUTPUT
  fi
  info $OUTPUT

  # Compact the backup.
  OUTPUT=$( (
  borg check $REPOSITORY
  ) 2>&1)
  if [ $? -ne 0 ] 
    then
    warning $OUTPUT
  fi
  info $OUTPUT
  unset BORG_PASSPHRASE
fi