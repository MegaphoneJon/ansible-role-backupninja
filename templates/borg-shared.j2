info "Starting borg backup"

# Run the backup.
OUTPUT=$( (
borg create --warning --filter=AME --stats  --list --compression lz4         \
{% if remote_path is defined -%}
--remote-path $REMOTE_PATH \
{% endif -%}

$REPOSITORY::'{hostname}-{now:%Y-%m-%d}' \
/etc \
/var \
/root \
/home \
/opt \
/srv \
/usr/local/bin \
/usr/local/sbin \
/var/lib/dpkg/status \
/var/lib/dpkg/status-old \
--exclude '**/templates_c' \
--exclude '**/tmp/' \
--exclude '**/temp/' \
--exclude '/home/*/.steam/steam/steamapps/common/' \
--exclude '/home/**/.cache' \
--exclude '/root/.cache' \
--exclude '/home/**/.mozilla/firefox/*/Cache' \
--exclude '/home/**/.thunderbird/*/global-messages-db.sqlite' \
--exclude '**/borg' \
--exclude '/var/cache' \
--exclude '/var/lib' \
--exclude '/home/*/.composer/cache' \
--exclude '/home/*/.config/Code/*/bmewburn.vscode-intelephense-client' \
--exclude '/home/*/.config/google-chrome' \
--exclude '/home/*/.config/Nextcloud/logs' \
--exclude '/home/*/Games' \
--exclude '/home/*/.vscode-server' \
--exclude '**/sites/default/files/css/' \
{% include "files/" + fqdn + "/borg-options.j2" ignore missing %}
--exclude '**/sites/default/files/js/'
) 2>&1)
# Are there any errors from the backup?
if [ $? -ne 0 ]
then
  # Is the error that a file changed?
  echo $OUTPUT | grep 'file changed while we backed it up'
  if [ $? -eq 0 ]
  then
    # Is the changed file one that's ok to change?  Currently files in /var/log, or in "wp-content/wflogs" or "ConfigAndLog".
    echo $OUTPUT  | sed --regexp-extended 's/ (A|M) /\n\1 /g' | grep -v --perl-regexp '(?:\/var\/log|.*wp-content\/wflogs|.*ConfigAndLog|firefox/\w+.default).*file changed while we backed it up' | grep 'file changed while we backed it up'
    if [ $? -ne 1 ]
    then
      warning 'Hey some files changed and were not filtered out by my new magic'
      warning $OUTPUT
    fi
  else
    warning $OUTPUT
  fi
fi
info $OUTPUT

# Remove old backups.
OUTPUT=$( (
borg prune -v $REPOSITORY --glob-archives '{hostname}-*' --keep-daily=15 --keep-weekly=9 --keep-monthly=6 {% if remote_path is defined %} --remote-path $REMOTE_PATH {% endif %} 
) 2>&1)
if [ $? -ne 0 ]
  then
  warning $OUTPUT
fi
info $OUTPUT

{# FIXME: This "if" only exists until everyone is on borgbackup 1.2 (Ubuntu 22.04, Debian 12) #}
{% if not((ansible_distribution == 'Debian' and ansible_distribution_major_version < '12') or (ansible_distribution == 'Ubuntu' and ansible_distribution_major_version < '22')) %}
# Compact the backup.
OUTPUT=$( (
borg compact {% if remote_path is defined %} --remote-path $REMOTE_PATH {% endif %} $REPOSITORY
) 2>&1)
if [ $? -ne 0 ]
then
  warning $OUTPUT
fi
info $OUTPUT
{% endif %}

DOW=$(date +'%A')
if [[ $DOW == 'Sunday' ]]
then
  # Check the integrity of the backup.
  OUTPUT=$( (
  borg check {% if remote_path is defined %} --remote-path $REMOTE_PATH {% endif %} $REPOSITORY
  ) 2>&1)
  if [ $? -ne 0 ]
  then
    warning $OUTPUT
  fi
  info $OUTPUT
fi
unset BORG_PASSPHRASE
